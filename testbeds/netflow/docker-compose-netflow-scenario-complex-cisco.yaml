version: '3.8'
services:
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./docker/context-catalog:/web 

  postgres:
    image: postgis/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "ngb", "-U", "ngb"]
      interval: 10s
      timeout: 5s
      retries: 5

  scorpio:
    image: scorpiobroker/all-in-one-runner:java-latest
    hostname: scorpio
    container_name: scorpio
    expose:
      - "9090"
    ports:
      - "9090:9090"
    depends_on:
      postgres:
        condition: service_healthy
      context-catalog:
        condition: service_started

  flink-jobmanager-1:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-jobmanager-1
    container_name: flink-jobmanager-1
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager-1
        parallelism.default: 1
        
  flink-taskmanager-netflow-driver:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager-netflow-driver
    container_name: flink-taskmanager-netflow-driver
    depends_on:
      - flink-jobmanager-1
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager-1
        taskmanager.numberOfTaskSlots: 1
        parallelism.default: 1

  flink-taskmanager-netflow-bidirectional-aggregator:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager-netflow-bidirectional-aggregator
    container_name: flink-taskmanager-netflow-bidirectional-aggregator
    depends_on:
      - flink-jobmanager-1
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager-1
        taskmanager.numberOfTaskSlots: 1
        parallelism.default: 1

  flink-jobmanager-2:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-jobmanager-2
    container_name: flink-jobmanager-2
    ports:
      - "8083:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager-2
        parallelism.default: 1

  flink-taskmanager-netflow-kpis-aggregator:
    image: flink:1.14.4-scala_2.12-java11
    hostname: flink-taskmanager-netflow-kpis-aggregator
    container_name: flink-taskmanager-netflow-kpis-aggregator
    depends_on:
      - flink-jobmanager-2
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager-2
        taskmanager.numberOfTaskSlots: 1
        parallelism.default: 1
        
  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
      KAFKA_CREATE_TOPICS: "network-flows:1:1,netflow-driver-output:1:1,netflow-bidiagg-output:1:1,netflow-kpisagg-output:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none

  netflow-json-parser-with-ngsi-ld-instantiator-complex:
    build:
      context: .
      dockerfile: ./docker/netflow-json-parser-with-ngsi-ld-instantiator-complex/Dockerfile
    hostname: netflow-json-parser-with-ngsi-ld-instantiator-complex
    container_name: netflow-json-parser-with-ngsi-ld-instantiator-complex
    volumes:
      - ./docker/netflow-json-parser-with-ngsi-ld-instantiator-complex:/opt/netflow-json-parser-with-ngsi-ld-instantiator-complex
    healthcheck:
      test: ["CMD", "python3", "--version"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      scorpio:
        condition: service_started
      context-catalog:
        condition: service_started
      kafka:
        condition: service_healthy
    restart: always

  notifier-tester:
    build:
      context: .
      dockerfile: ./docker/notifier-tester/Dockerfile
    hostname: notifier-tester
    container_name: notifier-tester
    expose:
      - "8082"
    ports:
      - "8082:8082"
    volumes:
      - ./docker/notifier-tester/notifier_tester:/opt/notifier-tester/notifier_tester
    depends_on:
      scorpio:
        condition: service_started
      context-catalog:
        condition: service_started
      kafka:
        condition: service_healthy
      netflow-json-parser-with-ngsi-ld-instantiator-complex:
        condition: service_healthy
    restart: always

networks:
  default:
    name: clab
    external: true