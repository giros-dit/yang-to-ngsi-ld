# coding: utf-8

"""
    NGSI-LD OAS

    OpenAPI Specification for NGSI-LD API.

    The version of the OpenAPI document: 1.8.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ngsi_ld_client_1_8_1.models.notification_params import NotificationParams

class TestNotificationParams(unittest.TestCase):
    """NotificationParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationParams:
        """Test NotificationParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationParams`
        """
        model = NotificationParams()
        if include_optional:
            return NotificationParams(
                attributes = [
                    ''
                    ],
                sys_attrs = True,
                format = 'normalized',
                pick = [
                    ''
                    ],
                omit = [
                    ''
                    ],
                show_changes = True,
                join = '@none',
                join_level = 1,
                endpoint = ngsi_ld_client_1_8_1.models.endpoint.Endpoint(
                    uri = '', 
                    accept = 'application/json', 
                    timeout = 1, 
                    cooldown = 1, 
                    receiver_info = [
                        ngsi_ld_client_1_8_1.models.key_value_pair.KeyValuePair(
                            key = '', 
                            value = '', )
                        ], 
                    notifier_info = [
                        ngsi_ld_client_1_8_1.models.key_value_pair.KeyValuePair(
                            key = '', 
                            value = '', )
                        ], ),
                status = 'ok',
                times_sent = 1,
                times_failed = 1,
                last_notification = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_failure = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_success = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return NotificationParams(
                endpoint = ngsi_ld_client_1_8_1.models.endpoint.Endpoint(
                    uri = '', 
                    accept = 'application/json', 
                    timeout = 1, 
                    cooldown = 1, 
                    receiver_info = [
                        ngsi_ld_client_1_8_1.models.key_value_pair.KeyValuePair(
                            key = '', 
                            value = '', )
                        ], 
                    notifier_info = [
                        ngsi_ld_client_1_8_1.models.key_value_pair.KeyValuePair(
                            key = '', 
                            value = '', )
                        ], ),
        )
        """

    def testNotificationParams(self):
        """Test NotificationParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
