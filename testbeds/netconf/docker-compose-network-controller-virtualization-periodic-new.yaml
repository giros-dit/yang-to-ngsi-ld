services:
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181"
    logging:
      driver: none

  kafka:
    image: wurstmeister/kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_DIRS: "/tmp/kafka-logs"
      KAFKA_CREATE_TOPICS: "interfaces-state-subscriptions:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    logging:
      driver: none
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  context-catalog:
    image: halverneus/static-file-server
    hostname: context-catalog
    container_name: context-catalog
    expose:
      - "8080"
    ports:
      - "8080:8080"
    volumes:
      - ./docker/context-catalog:/web

  postgres:
    image: postgis/postgis
    hostname: postgres
    container_name: postgres
    ports:
      - "5432"
    environment:
      POSTGRES_USER: ngb
      POSTGRES_PASSWORD: ngb
      POSTGRES_DB: ngb
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "ngb", "-U", "ngb"]
      interval: 10s
      timeout: 5s
      retries: 5

  scorpio:
    image: scorpiobroker/all-in-one-runner:java-latest
    hostname: scorpio
    container_name: scorpio
    expose:
      - "9090"
    ports:
      - "9090:9090"
    depends_on:
      postgres:
        condition: service_healthy
      context-catalog:
        condition: service_started

  notifier-tester-virtualization-periodic-new:
    build:
      context: .
      dockerfile: ./docker/notifier-tester-virtualization-periodic-new/Dockerfile
    hostname: notifier-tester-virtualization-periodic
    container_name: notifier-tester-virtualization-periodic
    expose:
      - "8082"
    ports:
      - "8082:8082"
    volumes:
      - ./docker/notifier-tester-virtualization-periodic-new/notifier_tester_virtualization_periodic_new:/opt/notifier-tester-virtualization-periodic-new/notifier_tester_virtualization_periodic_new
    depends_on:
      scorpio:
        condition: service_started
      context-catalog:
        condition: service_started
      kafka:
        condition: service_started
      network-controller-virtualization-new:
        condition: service_started
    restart: always

  network-controller-virtualization-new:
    build:
      context: .
      dockerfile: ./docker/network-controller-virtualization-new/Dockerfile
    hostname: network-controller-virtualization
    container_name: network-controller-virtualization
    expose:
      - "8089"
    ports:
      - "8089:8089"
    volumes:
      - ./docker/network-controller-virtualization-new/network_controller_virtualization_new:/opt/network-controller-virtualization-new/network_controller_virtualization_new
    depends_on:
      scorpio:
        condition: service_started
      context-catalog:
        condition: service_started
      kafka:
        condition: service_started
    restart: always

  xml-parser-with-ngsi-ld-instantiator-virtualization:
    build:
      context: .
      dockerfile: ./docker/xml-parser-with-ngsi-ld-instantiator-virtualization/Dockerfile
    hostname: xml-parser-with-ngsi-ld-instantiator-virtualization
    container_name: xml-parser-with-ngsi-ld-instantiator-virtualization
    volumes:
      - ./docker/xml-parser-with-ngsi-ld-instantiator-virtualization:/opt/xml-parser-with-ngsi-ld-instantiator-virtualization
    depends_on:
      scorpio:
        condition: service_started
      context-catalog:
        condition: service_started
      kafka:
        condition: service_healthy
    restart: always
    
networks:
  default:
    name: clab
    external: true
