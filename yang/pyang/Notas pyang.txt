import pdb; pdb.set_trace() en el punto donde se quiera hacer una traza

search_one('type') -> tipo de dato: string, etc...

dir() para obtener métodos

cp ngsi-ld-context.py ~/.local/lib/<python_version>/site-packages/pyang/plugins/ngsi-ld-context.py

>>> context = {}
>>> context['hola'] = 'texto'
>>> context['array'] = []
>>> context['array'][0] = 'texto_en_array'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: list assignment index out of range
>>> context['array']['pos_1'] = 'texto_en_array'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: list indices must be integers or slices, not str
>>> context['array'][0] = 'texto_en_array'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: list assignment index out of range
>>> context['array'] = {}
>>> context['array']['pos_1'] = 'texto_en_array'
>>> print(context)
{'hola': 'texto', 'array': {'pos_1': 'texto_en_array'}}
>>> import json
>>> out = json.dumps(context)
>>> print(out)
{"hola": "texto", "array": {"pos_1": "texto_en_array"}}
>>> context['array'] = []
>>> print(context)
{'hola': 'texto', 'array': []}
>>> context['array'][1] = 'texto_en_array'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
IndexError: list assignment index out of range
>>> context_array = {}
>>> context_array['hola1'] = 'hola1'
>>> context_array['hola2'] = 'hola2'
>>> context['array'].append(context_array)
>>> print(context)
{'hola': 'texto', 'array': [{'hola1': 'hola1', 'hola2': 'hola2'}]}

Si un container de YANG sólo tiene una lista, se obvia el container en la representación del contexto (enclosing container).