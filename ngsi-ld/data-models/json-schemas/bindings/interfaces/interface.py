# generated by datamodel-codegen:
#   filename:  interfaces/interface.json

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Literal, Optional

from pydantic import Extra, Field, StrictBool, StrictInt, StrictStr

from ..entity import Entity, Property, Relationship


class LinkUpDownTrapEnableOptions(Enum):
    """
    Options for linkUp/linkDown SNMP notifications.
    """

    enabled = 'enabled'
    disabled = 'disabled'


class AdminStatusOptions(Enum):
    """
    Options for the admin state of the interface.
    """

    up = 'up'
    down = 'down'
    testing = 'testing'


class OperStatusOptions(Enum):
    """
    Options for the operational state of the interface.
    """

    up = 'up'
    down = 'down'
    testing = 'testing'
    unknown = 'unknown'
    dormant = 'dormant'
    not_present = 'not-present'
    lower_layer_down = 'lower-layer-down'


class Name(Property):
    """
    Property. The name of the interface.
    """

    class Config:
        validate_assignment = True

    value: StrictStr


class Description(Property):
    """
    Property. Description of the interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictStr


class Enabled(Property):
    """
    Property. The configured, desired state of the interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictBool


class LinkUpDownTrapEnable(Property):
    """
    Property. Controls whether linkUp/linkDown SNMP notifications should be generated for this interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: LinkUpDownTrapEnableOptions


class AdminStatus(Property):
    """
    Property. The desired state of the interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: AdminStatusOptions


class OperStatus(Property):
    """
    Property. The current operational state of the interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: OperStatusOptions


class LastChange(Property):
    """
    Property. The time the interface entered its current operational state.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: datetime


class IfIndex(Property):
    """
    Property. The ifIndex value for the ifEntry represented by this interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictInt


class PhysAddress(Property):
    """
    Property. The interface's address at its protocol sub-layer.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictStr


class Speed(Property):
    """
    Property. An estimate of the interface's current bandwidth in bits per second.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    value: StrictInt


class HigherLayerIf(Relationship):
    """
    Relationship. A list of references to interfaces layered on top of this interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    object: StrictStr


class LowerLayerIf(Relationship):
    """
    Relationship. A list of references to interfaces layered underneath of this interface.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    object: StrictStr


class Interface(Entity):
    """
    Entity that represents the interface of a model-based network device supporting the ietf-intefaces@2018-02-20.yang YANG module.
    """

    class Config:
        validate_assignment = True
        extra = Extra.forbid
        allow_population_by_field_name = True

    type: Optional[Literal['Interface']] = Field(
        'Interface',
        description='NGSI-LD Entity identifier. It has to be Interface.',
    )
    name: Name
    description: Optional[Description]
    enabled: Optional[Enabled]
    link_up_down_trap_enable: Optional[LinkUpDownTrapEnable] = Field(
        None, alias='linkUpDownTrapEnable'
    )
    admin_status: AdminStatus = Field(..., alias='adminStatus')
    oper_status: OperStatus = Field(..., alias='operStatus')
    last_change: Optional[LastChange] = Field(None, alias='lastChange')
    if_index: Optional[IfIndex] = Field(None, alias='ifIndex')
    phys_address: Optional[PhysAddress] = Field(None, alias='physAddress')
    speed: Optional[Speed]
    higher_layer_if: Optional[HigherLayerIf] = Field(
        None, alias='higherLayerIf'
    )
    lower_layer_if: Optional[LowerLayerIf] = Field(None, alias='lowerLayerIf')
